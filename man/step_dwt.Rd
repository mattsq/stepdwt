% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_dwt.R
\name{step_dwt}
\alias{step_dwt}
\title{Discrete Wavelet Transformation}
\usage{
step_dwt(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  ref_dist = NULL,
  filter = "haar",
  options = list(),
  skip = FALSE,
  id = recipes::rand_id("dwt")
)
}
\arguments{
\item{...}{One or more selector functions to choose which
variables will be used to compute the components. See
\code{\link[=selections]{selections()}} for more details. For the \code{tidy}
method, these are not currently used.}

\item{role}{For model terms created by this step, what analysis
role should they be assigned?. By default, the function assumes
that the new principal component columns created by the original
variables will be used as predictors in a model.}

\item{ref_dist}{placeholder}

\item{options}{A list of options to the default method for
\code{\link[wavelets:dwt]{wavelets::dwt()}}. Argument defaults are set to
\code{filter = 'haar'}. No others should be passed.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} (the
selectors or variables selected), \code{value} (the
loading), and \code{component}.
}
\description{
\code{step_dwt} creates a \emph{specification} of a recipe step
that will convert numeric data into an arbitrary number
of wavelets as computed by \code{wavelets::dwt()}
}
\details{
Some boilerplate about what DWT actually is to go here!
}
\examples{
rec <- recipe( ~ ., data = USArrests)
dwt_trans <- rec \%>\%
  step_center(all_numeric()) \%>\%
  step_scale(all_numeric()) \%>\%
  step_dwt(all_numeric())
dwt_estimates <- prep(dwt_trans, training = USArrests)
dwt_data <- bake(dwt_estimates, USArrests)

}
\references{
Add reference
}
\concept{dwt}
\concept{preprocessing}
\concept{projection_methods}
\keyword{datagen}
